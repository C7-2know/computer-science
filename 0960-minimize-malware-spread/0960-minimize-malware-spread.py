class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        queue=initial.copy()
        graph_dc={}
        initial.sort()
        ref=[0]*len(graph)
        for i in range(len(graph)):
            for j in range(len(graph)):
                if i not in graph_dc:
                    graph_dc[i]=set()
                if j not in graph_dc:
                    graph_dc[j]=set()
                if i!=j and graph[i][j]==1:
                    graph_dc[i].add(j)
                    graph_dc[j].add(i)
        
        def search(node):
            visited=set()
            queue=[node]
            while queue:
                nod=queue.pop()
                visited.add(nod)
                for nd in graph_dc[nod]:
                    if nd not in visited:
                        ref[nd]+=1
                        queue.append(nd)
                        visited.add(nd)

        def countContact(node):
            visited=set()
            queue=[node]
            count=0
            if ref[node]==1:
                count+=1
            con=0
            while queue:
                nod=queue.pop()
                visited.add(nod)
                for nd in graph_dc[nod]:
                    if nd not in visited:
                        queue.append(nd)
                        visited.add(nd)
                        if ref[nd]<=1:
                            count+=1
                        
            return count

        for node in initial:
            ref[node]+=1
            search(node)

        max_=float('-inf')
        res=initial[0]
        for node in initial:
            count=countContact(node)
            if max_<count:
                max_=count
                res=node
        print(res)   
        return res
            
        