class Solution:
    # def threeSum(self, nums: List[int]) -> List[List[int]]:
    #     arr=[]
    #     nums.sort()
    #     for i in range(len(nums)-2):
    #         for j in range(i+1,len(nums)-1):
    #             for k in range(j+1,len(nums)):
    #                 if nums[i]+nums[j]+nums[k]==0:
    #                     if [nums[i],nums[j],nums[k]] not in arr:
    #                         arr.append([nums[i],nums[j],nums[k]])
    #     return arr
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        arr = []
        nums.sort()
        n = len(nums)
        
        for i in range(n - 2):
            # Skip duplicates for the first element
            if i > 0 and nums[i] == nums[i - 1]:
                continue
            
            left, right = i + 1, n - 1
            
            while left < right:
                total = nums[i] + nums[left] + nums[right]
                
                if total == 0:
                    arr.append([nums[i], nums[left], nums[right]])
                    
                    # Skip duplicates for the second element
                    while left < right and nums[left] == nums[left + 1]:
                        left += 1
                    
                    # Skip duplicates for the third element
                    while left < right and nums[right] == nums[right - 1]:
                        right -= 1
                    
                    left += 1
                    right -= 1
                elif total < 0:
                    left += 1
                else:
                    right -= 1

        return arr


        
